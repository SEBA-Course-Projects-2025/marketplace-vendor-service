basePath: /api
definitions:
  dtos.AccountPatchRequest:
    properties:
      address:
        type: string
      description:
        type: string
      email:
        type: string
      logo:
        type: string
      name:
        type: string
      website:
        type: string
    type: object
  dtos.AccountResponse:
    properties:
      address:
        type: string
      description:
        type: string
      email:
        type: string
      id:
        type: string
      logo:
        type: string
      name:
        type: string
      website:
        type: string
    type: object
  dtos.CommentDto:
    properties:
      comment:
        type: string
    type: object
  dtos.GetOneReviewDto:
    properties:
      comment:
        type: string
      date:
        type: string
      product_id:
        type: string
      rating:
        type: number
      replies:
        items:
          $ref: '#/definitions/dtos.ReplyDto'
        type: array
      review_id:
        type: string
      reviewer_id:
        type: string
      reviewer_name:
        type: string
      vendor_id:
        type: string
    type: object
  dtos.GetOrdersResponse:
    properties:
      customer_id:
        type: string
      date:
        type: string
      items:
        items:
          type: string
        type: array
      order_id:
        type: string
      status:
        type: string
      total_price:
        type: number
      vendor_id:
        type: string
    type: object
  dtos.GetReviewsResponse:
    properties:
      comment:
        type: string
      date:
        type: string
      product_id:
        type: string
      rating:
        type: number
      review_id:
        type: string
      reviewer_id:
        type: string
      reviewer_name:
        type: string
      vendor_id:
        type: string
    type: object
  dtos.LoginRequestDto:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dtos.OneOrderResponse:
    properties:
      customer_id:
        type: string
      date:
        type: string
      items:
        items:
          $ref: '#/definitions/dtos.OrderItemResponse'
        type: array
      order_id:
        type: string
      status:
        type: string
      total_price:
        type: number
      vendor_id:
        type: string
    type: object
  dtos.OrderItemResponse:
    properties:
      image_url:
        type: string
      product_name:
        type: string
      productId:
        type: string
      quantity:
        type: integer
      unit_price:
        type: number
    type: object
  dtos.PostReplyDto:
    properties:
      comment:
        type: string
      date:
        type: string
      name:
        type: string
      replier_id:
        type: string
      reply_id:
        type: string
      review_id:
        type: string
    type: object
  dtos.PutRequestDto:
    properties:
      address:
        type: string
      description:
        type: string
      email:
        type: string
      logo:
        type: string
      name:
        type: string
      website:
        type: string
    type: object
  dtos.ReplyDto:
    properties:
      comment:
        type: string
      date:
        type: string
      name:
        type: string
      replier_id:
        type: string
      reply_id:
        type: string
    type: object
  dtos.StatusRequestDto:
    properties:
      status:
        type: string
    type: object
host: marketplace-vendor-service.onrender.com
info:
  contact: {}
  description: API for managing vendor account.
  title: Vendor Service API
  version: "1.0"
paths:
  /account:
    get:
      consumes:
      - application/json
      description: Returns the account for the given vendor.
      parameters:
      - description: Bearer access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.AccountResponse'
        "400":
          description: Invalid vendorId
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Account not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get account by vendor Id
      tags:
      - accounts
    patch:
      consumes:
      - application/json
      description: Partially updates the account for the given vendor.
      parameters:
      - description: Bearer access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Account patch data
        in: body
        name: accountReq
        required: true
        schema:
          $ref: '#/definitions/dtos.AccountPatchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.AccountResponse'
        "400":
          description: Invalid vendorId or request body
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Account not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Partially update account
      tags:
      - accounts
    put:
      consumes:
      - application/json
      description: Fully updates the account for the given vendor.
      parameters:
      - description: Bearer access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Account updated data
        in: body
        name: accountReq
        required: true
        schema:
          $ref: '#/definitions/dtos.PutRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid vendorId or account data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Account not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Fully update account
      tags:
      - accounts
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates an account and returns a JWT token.
      parameters:
      - description: Login credentials
        in: body
        name: loginReq
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid account credentials
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Login account
      tags:
      - accounts
  /orders:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of orders for the given vendor.
      parameters:
      - description: Bearer access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Page size (default 15)
        in: query
        name: size
        type: integer
      - description: Offset (overrides page/size if set)
        in: query
        name: offset
        type: integer
      - description: Limit (overrides size if set)
        in: query
        name: limit
        type: integer
      - description: Sort by field (default date)
        in: query
        name: sortBy
        type: string
      - description: 'Sort order: asc or desc (default asc)'
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.GetOrdersResponse'
            type: array
        "400":
          description: Invalid query parameters or vendorId
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List orders
      tags:
      - orders
  /orders/{orderId}:
    get:
      consumes:
      - application/json
      description: Returns a single order by its ID for the given vendor.
      parameters:
      - description: Bearer access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order ID (UUID)
        in: path
        name: orderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OneOrderResponse'
        "400":
          description: Invalid vendorId or orderId
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Order not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get order by ID
      tags:
      - orders
    patch:
      consumes:
      - application/json
      description: Partially updates the status of an order for the given vendor.
      parameters:
      - description: Bearer access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order ID (UUID)
        in: path
        name: orderId
        required: true
        type: string
      - description: Order status update data
        in: body
        name: statusReq
        required: true
        schema:
          $ref: '#/definitions/dtos.StatusRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OneOrderResponse'
        "400":
          description: Invalid vendorId, orderId, or request body
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Order not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Partially update order status
      tags:
      - orders
  /reviews:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of reviews for the given vendor.
      parameters:
      - description: Bearer access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Page size (default 15)
        in: query
        name: size
        type: integer
      - description: Offset (overrides page/size if set)
        in: query
        name: offset
        type: integer
      - description: Limit (overrides size if set)
        in: query
        name: limit
        type: integer
      - description: Sort by field (default date)
        in: query
        name: sortBy
        type: string
      - description: 'Sort order: asc or desc (default asc)'
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.GetReviewsResponse'
            type: array
        "400":
          description: Invalid query parameters or vendorId
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List reviews
      tags:
      - reviews
  /reviews/{reviewId}:
    get:
      consumes:
      - application/json
      description: Returns a single review by its ID for the given vendor.
      parameters:
      - description: Bearer access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review ID (UUID)
        in: path
        name: reviewId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.GetOneReviewDto'
        "400":
          description: Invalid vendorId or reviewId
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Review not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get review by ID
      tags:
      - reviews
  /reviews/{reviewId}/replies:
    post:
      consumes:
      - application/json
      description: Adds a reply to a specific review for the given vendor.
      parameters:
      - description: Bearer access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review ID (UUID)
        in: path
        name: reviewId
        required: true
        type: string
      - description: Reply data
        in: body
        name: commentReq
        required: true
        schema:
          $ref: '#/definitions/dtos.CommentDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.PostReplyDto'
        "400":
          description: Invalid vendorId, reviewId, or reply data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Add reply to review
      tags:
      - reviews
  /reviews/{reviewId}/replies/{replyId}:
    patch:
      consumes:
      - application/json
      description: Partially updates a reply to a specific review for the given vendor.
      parameters:
      - description: Bearer access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review ID (UUID)
        in: path
        name: reviewId
        required: true
        type: string
      - description: Reply ID (UUID)
        in: path
        name: replyId
        required: true
        type: string
      - description: Reply update data
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/dtos.CommentDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.PostReplyDto'
        "400":
          description: Invalid vendorId, reviewId, replyId, or comment data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Reply not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Partially update reply to review
      tags:
      - reviews
schemes:
- https
swagger: "2.0"
